Mostrar los testimoniales agregados en la vista

1) Abrir paginasController e importar la función Testimonial de Testimoniales.js de la carpeta models:
import { Viaje } from '../models/Viaje.js';
import {
     Testimonial
} from '../models/Testimoniales.js';

const paginaInicio = (req, res) => {

     res.render('Inicio', {
          pagina: 'Inicio'
     });
};

const paginaNosotros = (req, res) => {
     const viajes = 'Viaje a Alemania';

     res.render('Nosotros', {
          pagina: 'Nosotros'
     });
};

const paginaViajes = async (req, res) => {
     // Consultar base de datos
     const viajes = await Viaje.findAll();

     res.render('Viajes', {
          pagina: 'Próximos Viajes',
          viajes
     });
};

const paginaTestimoniales = async (req, res) => {
     // Envía los testimoniales a la vista
     try {
          const testimoniales = await Testimonial.findAll();

          res.render('Testimoniales', {
               pagina: 'Testimoniales',
               testimoniales
          });
     } catch (error) {
          console.log(error);
     }
};

// Muestra un viaje por su slug
const paginaDetalleViaje = async (req, res) => {
     // Aplicamos destructuring a params
     const { slug } = req.params;

     try {
          const viaje = await Viaje.findOne({ where: { slug }});  
          
          res.render('Viaje', {
               pagina: 'Viaje',
               viaje
          });     
     } catch (error) {
          console.log(error);
     }
};

export {
     paginaInicio,
     paginaNosotros,
     paginaViajes,
     paginaTestimoniales,
     paginaDetalleViaje
};

2) Luego en la vista testimoniales.pug colocamos el código para mostrar los testimoniales:
extends ./layout/index

block contenido
     main.container.mt-5 
          h1.text-center.mt-5 #{pagina}
          blockquote.text-center Experiencias de nuestros clientes
          .row.testimoniales
               if(confirmacion)
                    .alert.col.alert-success.text-center= confirmacion
               each testimonial in testimoniales
                    .col-md-6.col-lg-4.mb-4
                         .card
                              .card-body 
                                   blockquote.blockquote 
                                   p.mb-0 
                                        | #{testimonial.mensaje}
                                   footer.blockquote-footer 
                                        | #{testimonial.nombre}
          .row 
               .col-md-12
                    h2.d-block.w-100.text-center Agrega un Testimonial
                    if(errores)
                         each error in errores
                              .alert.col.alert-danger.text-center= error.mensaje
               .row.justify-content-center.col
                    .col-md-8 
                         form(action="/testimoniales" method="post")
                              .form-group 
                                   label(for="nombre") Nombre (*)
                                   input#nombre(type="text", placeholder="Tu nombre", name="nombre", class="form-control", value= nombre)
                              .form-group 
                                   label(for="correo") Correo (*)
                                   input#correo(type="text", placeholder="Tu correo", name="correo", class="form-control", value = correo)
                              .form-group 
                                   label(for="mensaje") Mensaje (*)
                                   textarea#mensaje(name="mensaje", cols="30", rows="3", placeholder="Escribe un mensaje",class="form-control")= mensaje
                              input.btn.btn-success.btn-block(type="submit")
Creamos un card que mostrará el resultado de la iteración del arreglo testimoniales.
Colocamos la confirmación arriba de los testimoniales.

3) Agregamos este código a testimonialController:
import { Testimonial } from "../models/Testimoniales.js";

const guardarTestimonial = async (req, res) => {
     // destructuring del objet req.body
     const { nombre, correo, mensaje } = req.body;

     // Validar formulario
     const errores = [];

     if (nombre.trim() === '') {
          errores.push({mensaje: 'Nombre no puede estar vacío'});
     };

     if (correo.trim() === '') {
          errores.push({mensaje: 'Correo no puede estar vacío'});
     };

     if (mensaje.trim() === '') {
          errores.push({mensaje: 'Mensaje no puede estar vacío'});
     };

     // Si hay errores
     if (errores.length > 0) {
          // Consultar a la base de datos
          const testimoniales = await Testimonial.findAll();
          // Mostrar la vista con errores
          res.render('testimoniales', {
               pagina: 'Testimoniales',
               errores, 
               nombre,
               correo,
               mensaje,
               testimoniales
          });

     } else {
          // Almacenarlo en la base de datos
          try {
               await Testimonial.create({
                    nombre,
                    correo,
                    mensaje
               });
               
               // Consultar a la base de datos
               const testimoniales = await Testimonial.findAll();
               res.render('testimoniales', {
                    pagina: 'Testimoniales',
                    confirmacion: '¡Testimonial registrado exitosamente!',
                    testimoniales
               });

               // una vez guardados los datos, redirige al usuario a la página testimoniales
               res.redirect('/testimoniales');
          } catch (error) {
               console.log(error);
          }
     };
}

export {
     guardarTestimonial
};

Para evitar errores, debemos pasarle la consulta:
const testimniales = Testimonial.findAll(); 
a testimonialController, ya que si hay errores no se les pasa los testimniales y no tendrá como consultar y en la parte confirmación pasa lo mismo.
